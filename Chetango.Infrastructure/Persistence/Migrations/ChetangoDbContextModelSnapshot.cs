// <auto-generated />
using System;
using Chetango.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chetango.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ChetangoDbContext))]
    partial class ChetangoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chetango.Domain.Entities.Alumno", b =>
                {
                    b.Property<Guid>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdAlumno");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Alumnos", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Auditoria", b =>
                {
                    b.Property<Guid>("IdAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("FechaHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdAuditoria");

                    b.HasIndex("FechaHora");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Auditorias", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Clase", b =>
                {
                    b.Property<Guid>("IdClase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<Guid>("IdProfesorPrincipal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoClase")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdClase");

                    b.HasIndex("IdProfesorPrincipal");

                    b.HasIndex("IdTipoClase");

                    b.HasIndex("Fecha", "IdTipoClase");

                    b.ToTable("Clases", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.ConfiguracionNotificaciones", b =>
                {
                    b.Property<Guid>("IdConfig")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnticipacionAlerta")
                        .HasColumnType("int");

                    b.Property<string>("TextoAgotamiento")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextoVencimiento")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdConfig");

                    b.ToTable("ConfiguracionesNotificaciones", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.CongelacionPaquete", b =>
                {
                    b.Property<Guid>("IdCongelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdPaquete")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCongelacion");

                    b.HasIndex("IdPaquete", "FechaInicio", "FechaFin");

                    b.ToTable("CongelacionesPaquete", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Asistencia", b =>
                {
                    b.Property<Guid>("IdAsistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdClase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdPaqueteUsado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdAsistencia");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdPaqueteUsado");

                    b.HasIndex("IdClase", "IdAlumno")
                        .IsUnique();

                    b.ToTable("Asistencias", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.EstadoAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("EstadosAsistencia", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Presente"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Ausente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Justificada"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.EstadoNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("EstadosNotificacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Enviada"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Leida"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.EstadoPaquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("EstadosPaquete", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Vencido"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Congelado"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Agotado"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.EstadoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("EstadosUsuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inactivo"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Bloqueado"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.MetodoPago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("MetodosPago", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("10101010-1010-1010-1010-101010101010"),
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            Id = new Guid("20202020-2020-2020-2020-202020202020"),
                            Nombre = "Transferencia"
                        },
                        new
                        {
                            Id = new Guid("30303030-3030-3030-3030-303030303030"),
                            Nombre = "Tarjeta"
                        },
                        new
                        {
                            Id = new Guid("40404040-4040-4040-4040-404040404040"),
                            Nombre = "Bono"
                        },
                        new
                        {
                            Id = new Guid("50505050-5050-5050-5050-505050505050"),
                            Nombre = "Cortesia"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Notificacion", b =>
                {
                    b.Property<Guid>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Leida")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdNotificacion");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdUsuario", "Leida");

                    b.ToTable("Notificaciones", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Paquete", b =>
                {
                    b.Property<Guid>("IdPaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClasesDisponibles")
                        .HasColumnType("int");

                    b.Property<int>("ClasesUsadas")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActivacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdPago")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoPaquete")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorPaquete")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPaquete");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdPago");

                    b.HasIndex("IdTipoPaquete");

                    b.HasIndex("IdAlumno", "FechaVencimiento");

                    b.ToTable("Paquetes", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Profesor", b =>
                {
                    b.Property<Guid>("IdProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoProfesor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdProfesor");

                    b.HasIndex("IdTipoProfesor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Profesores", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Nombre = "Alumno"
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            Nombre = "Profesor"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.RolEnClase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("RolesEnClase", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            Nombre = "Principal"
                        },
                        new
                        {
                            Id = new Guid("12121212-1212-1212-1212-121212121212"),
                            Nombre = "Monitor"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TarifaProfesor", b =>
                {
                    b.Property<Guid>("IdTarifa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRolEnClase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTipoProfesor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfesorIdProfesor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorPorClase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTarifa");

                    b.HasIndex("IdRolEnClase");

                    b.HasIndex("ProfesorIdProfesor");

                    b.HasIndex("IdTipoProfesor", "IdRolEnClase")
                        .IsUnique();

                    b.ToTable("TarifasProfesor", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoClase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposClase", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Nombre = "Regular"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Nombre = "Taller"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            Nombre = "Evento"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposDocumento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Nombre = "CC"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Nombre = "CE"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Nombre = "PAS"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoPaquete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposPaquete", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            Nombre = "Mensual"
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            Nombre = "BonoClases"
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            Nombre = "Ilimitado"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoProfesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposProfesor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Nombre = "Principal"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Nombre = "Monitor"
                        });
                });

            modelBuilder.Entity("Chetango.Domain.Entities.MonitorClase", b =>
                {
                    b.Property<Guid>("IdMonitorClase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdClase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProfesor")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdMonitorClase");

                    b.HasIndex("IdProfesor");

                    b.HasIndex("IdClase", "IdProfesor")
                        .IsUnique();

                    b.ToTable("MonitoresClase", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Pago", b =>
                {
                    b.Property<Guid>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMetodoPago")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdMetodoPago");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("IdEstadoUsuario")
                        .HasColumnType("int");

                    b.Property<Guid>("IdTipoDocumento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("IdEstadoUsuario");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.HasIndex("NumeroDocumento")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuariosRoles", (string)null);
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Alumno", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Auditoria", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Auditorias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Clase", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.Profesor", "ProfesorPrincipal")
                        .WithMany("Clases")
                        .HasForeignKey("IdProfesorPrincipal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.TipoClase", "TipoClase")
                        .WithMany("Clases")
                        .HasForeignKey("IdTipoClase")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProfesorPrincipal");

                    b.Navigation("TipoClase");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.CongelacionPaquete", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.Paquete", "Paquete")
                        .WithMany("Congelaciones")
                        .HasForeignKey("IdPaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Asistencia", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Alumno", "Alumno")
                        .WithMany("Asistencias")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Clase", "Clase")
                        .WithMany("Asistencias")
                        .HasForeignKey("IdClase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.EstadoAsistencia", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.Paquete", "PaqueteUsado")
                        .WithMany()
                        .HasForeignKey("IdPaqueteUsado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Clase");

                    b.Navigation("Estado");

                    b.Navigation("PaqueteUsado");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Notificacion", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.EstadoNotificacion", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Paquete", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.EstadoPaquete", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Pago", "Pago")
                        .WithMany("Paquetes")
                        .HasForeignKey("IdPago")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Chetango.Domain.Entities.Estados.TipoPaquete", "TipoPaquete")
                        .WithMany("Paquetes")
                        .HasForeignKey("IdTipoPaquete")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Estado");

                    b.Navigation("Pago");

                    b.Navigation("TipoPaquete");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Profesor", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.TipoProfesor", "TipoProfesor")
                        .WithMany("Profesores")
                        .HasForeignKey("IdTipoProfesor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Profesores")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoProfesor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TarifaProfesor", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.RolEnClase", "RolEnClase")
                        .WithMany("Tarifas")
                        .HasForeignKey("IdRolEnClase")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.TipoProfesor", "TipoProfesor")
                        .WithMany()
                        .HasForeignKey("IdTipoProfesor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.Profesor", null)
                        .WithMany("Tarifas")
                        .HasForeignKey("ProfesorIdProfesor");

                    b.Navigation("RolEnClase");

                    b.Navigation("TipoProfesor");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.MonitorClase", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Clase", "Clase")
                        .WithMany("Monitores")
                        .HasForeignKey("IdClase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.Profesor", "Profesor")
                        .WithMany("MonitorClases")
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Pago", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Alumno", "Alumno")
                        .WithMany("Pagos")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.MetodoPago", "MetodoPago")
                        .WithMany("Pagos")
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.EstadoUsuario", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstadoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Estados.TipoDocumento", "TipoDocumento")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Chetango.Domain.Entities.Estados.Rol", "Rol")
                        .WithMany("UsuariosRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Chetango.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Alumno", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Clase", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Monitores");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.MetodoPago", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Paquete", b =>
                {
                    b.Navigation("Congelaciones");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Profesor", b =>
                {
                    b.Navigation("Clases");

                    b.Navigation("MonitorClases");

                    b.Navigation("Tarifas");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.Rol", b =>
                {
                    b.Navigation("UsuariosRoles");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.RolEnClase", b =>
                {
                    b.Navigation("Tarifas");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoClase", b =>
                {
                    b.Navigation("Clases");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoDocumento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoPaquete", b =>
                {
                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Estados.TipoProfesor", b =>
                {
                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Pago", b =>
                {
                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("Chetango.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("Auditorias");

                    b.Navigation("Notificaciones");

                    b.Navigation("Profesores");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
